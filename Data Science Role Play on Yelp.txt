Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 distinct foreign code records. 
ii. Hours = 1562 distinct records, foreign key business_id
iii. Category = 2643 distinct records, foreign key business_id
iv. Attribute = 1115 distinct records, foreign key id
v. Review = 10,000
vi. Checkin = 493 distinct records, foreign key buisness_id
vii. Photo =10,000
viii. Tip = 537 distinct records, foreign key user_id
ix. User = 10,000
x. Friend = 11 distinct records, foreign key user_id
xi. Elite_years = 2780 distinct records,  foreign key user id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No 
	
	
	SQL code used to arrive at answer:
SELECT *
FROM user
WHERE id IS NULL id IS NULL
	OR name IS NULL
	OR review_count IS NULL
	OR yelping_since IS NULL
	OR useful IS NULL
	OR funny IS NULL
	OR cool IS NULL
	OR fans IS NULL
	OR average_stars IS NULL
	OR compliment_hot IS NULL
	OR compliment_more IS NULL
	OR compliment_profile IS NULL
	OR compliment_cute IS NULL
	OR compliment_list IS NULL
	OR compliment_note IS NULL
	OR compliment_plain IS NULL
	OR compliment_cool IS NULL
	OR compliment_funny IS NULL
	OR compliment_writer IS NULL
	OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max: 5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:	53	avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:



SQL code used to arrive at answer: 

select city, sum(review_count) As reviews
from business 
group by city
order by reviews desc

	
	
Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+

	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars,city
from business
where city like '%avon'
order by stars

+-------+------+
| stars | city |
+-------+------+
|   1.5 | Avon |
|   2.5 | Avon |
|   2.5 | Avon |
|   3.5 | Avon |
|   3.5 | Avon |
|   3.5 | Avon |
|   4.0 | Avon |
|   4.0 | Avon |
|   4.5 | Avon |
|   5.0 | Avon |
+-------+------+


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):


ii. Beachwood

SQL code used to arrive at answer:
select stars,city
from business
where city like '%beachwood'
order by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+-----------+
| stars | city      |
+-------+-----------+
|   2.0 | Beachwood |
|   2.5 | Beachwood |
|   3.0 | Beachwood |
|   3.0 | Beachwood |
|   3.5 | Beachwood |
|   3.5 | Beachwood |
|   4.0 | Beachwood |
|   4.5 | Beachwood |
|   4.5 | Beachwood |
|   5.0 | Beachwood |
|   5.0 | Beachwood |
|   5.0 | Beachwood |
|   5.0 | Beachwood |
|   5.0 | Beachwood |
+-------+-----------

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer: 

select review_count, id, name
from user
order by review_count desc
limit 3
	
		
	Copy and Paste the Result Below:

+--------------+------------------------+--------+
| review_count | id                     | name   |
+--------------+------------------------+--------+
|         2000 | -G7Zkl1wIWBBmD0KRy_sCw | Gerald |
|         1629 | -3s52C4zL_DHRK0ULG6qtg | Sara   |
|         1339 | -8lbUNlXVSoXqaRRiHiSNg | Yuri   |
+--------------+------------------------+--------+
		


8. Does posting more reviews correlate with more fans? No correction between more review and fans. 

Please explain your findings and interpretation of the results: 

Some of the records with the highest number of fans do not have the highest number of reviews. for instance one review posting had 1339, but only 76 fans. 


select review_count, fans
from user
order by fans desc

+--------------+------+
| review_count | fans |
+--------------+------+
|          609 |  503 |
|          968 |  497 |
|         1153 |  311 |
|         2000 |  253 |
|          930 |  173 |
|          813 |  159 |
|          377 |  133 |
|         1215 |  126 |
|          862 |  124 |
|          834 |  120 |
|          861 |  115 |
|          408 |  111 |
|          255 |  105 |
|         1039 |  104 |
|          694 |  101 |
|         1246 |  101 |
|          307 |   96 |
|          584 |   89 |
|          842 |   85 |
|          220 |   84 |
|          408 |   81 |
|          178 |   80 |
|          754 |   78 |
|         1339 |   76 |
|          161 |   73 |
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:love 

love: 1,780 hate: 232

	
	SQL code used to arrive at answer:
select *
from review
WHERE text like '%love%'

select *
from review
WHERE text like '%hate%'

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

select
	name,
	review_count,
	fans
	from user left join review
ON user.id=review.user_id
order by review_count DESC
LIMIT 10
	
	
	Copy and Paste the Result Below:
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
+-----------+--------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours? Yes the ratings range from 4-5 and 2-3 


ii. Do the two groups you chose to analyze have a different number of reviews? Yes, reviews start at 26 and decends to 10.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? High Park has he highest number of reviews at Cabin Fever and halo brewery.

SQL code used for analysis:

SELECT
       CASE
       WHEN stars>=4 THEN '4-5 Stars'
       WHEN (stars>=2 AND stars<=3) THEN '2-3 Stars'
       END as rating_stars,

       postal_code,
       review_count,
       hours.hours,
       name,
       neighborhood


FROM business INNER JOIN category
     ON business.id=category.business_id

     INNER JOIN hours
     ON business.id=hours.business_id

WHERE city='Toronto'
      AND category = 'Food'
      AND (stars>=4 OR (stars <3 and stars>2))

ORDER BY stars DESC, hours DESC

+--------------+-------------+--------------+-----------------------+--------------+
| rating_stars | postal_code | review_count | hours                 | name         |
+--------------+-------------+--------------+-----------------------+--------------+
| 4-5 Stars    | M6P 1A6     |           26 | Wednesday|18:00-2:00  | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Tuesday|18:00-2:00    | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Thursday|18:00-2:00   | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Sunday|16:00-2:00     | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Saturday|16:00-2:00   | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Monday|16:00-2:00     | Cabin Fever  |
| 4-5 Stars    | M6P 1A6     |           26 | Friday|18:00-2:00     | Cabin Fever  |
| 4-5 Stars    | M6H 1V5     |           15 | Wednesday|15:00-21:00 | Halo Brewery |
| 4-5 Stars    | M6H 1V5     |           15 | Tuesday|15:00-21:00   | Halo Brewery |
| 4-5 Stars    | M6H 1V5     |           15 | Thursday|15:00-21:00  | Halo Brewery |
| 4-5 Stars    | M6H 1V5     |           15 | Sunday|11:00-21:00    | Halo Brewery |
| 4-5 Stars    | M6H 1V5     |           15 | Saturday|11:00-21:00  | Halo Brewery |
| 4-5 Stars    | M6H 1V5     |           15 | Friday|15:00-21:00    | Halo Brewery |
| 2-3 Stars    | M6R 1X3     |           10 | Wednesday|8:00-22:00  | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Tuesday|8:00-22:00    | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Thursday|8:00-22:00   | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Sunday|8:00-22:00     | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Saturday|8:00-22:00   | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Monday|8:00-22:00     | Loblaws      |
| 2-3 Stars    | M6R 1X3     |           10 | Friday|8:00-22:00     | Loblaws      |
+--------------+-------------+--------------+-----------------------+--------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open businesses have more reviews 
         
         
ii. Difference 2:Open businesses have slighty a higher rating
         
         
         
SQL code used for analysis:

SELECT count(id) as Total_Num_businesses
,avg(stars) as star_rating
, avg(review_count) as Number_of_reviews
, is_open as business_status
from business
group by is_open  

+----------------------+-------------------+--------------------+-----------------+
| Total_Num_businesses |       star_rating |  Number_of_reviews | business_status |
+----------------------+-------------------+--------------------+-----------------+
|                 1520 | 3.520394736842105 | 23.198026315789473 |               0 |
|                 8480 | 3.679009433962264 | 31.757075471698112 |               1 |
+----------------------+-------------------+--------------------+-----------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:I want to see which city and gender has the most hot compliments on reviews. 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For this analysis I found myself very intested who would give hot as a compliment on a post. I wanted to see what city would have the most reviews with the compliment as hot. Additionally I wanted see if the posters was often more female that male.  I assumed it would be male, but if going off names, the name list identifies with mostly female names. 

For this analysis I used two tables, the user table (to gather user data) columns compliment_hot and name and from the business table name and city as I wanted to pull the city column to see what cities had the highest number of hot-compliments and name on both to reveal gender through name sterotypes. 
I found my results surprising since that most were females, but also not surprised that the compliment_hot was from larger cities. 
 
                           
                  
iii. Output of your finished dataset:

+-----------------------+----------------+----------+
| count(compliment_hot) | city           | poster   |
+-----------------------+----------------+----------+
|                    15 | Edinburgh      | Victoria |
|                    45 | Matthews       | Jessica  |
|                    13 | Montréal       | Jane     |
|                     1 | New Kensington | Sheetz   |
|                     1 | North York     | Rona     |
|                     3 | Phoenix        | Stella   |
|                     1 | Pittsburgh     | Sheetz   |
|                     4 | Toronto        | Liberty  |
+-----------------------+----------------+----------+
         
         
SELECT count(compliment_hot), b.city,a.name as poster
from user a
join business b on a.name = b.name
group by city
order by compliment_hot desc